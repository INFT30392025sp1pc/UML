@startuml
interface IExamPaper {
    + generateExam(): ExamPaper
    + assignToStudents(studentList: StudentList)
}

class ExamService implements IExamPaper {
    + generateExam(): ExamPaper
    + assignToStudents(studentList: StudentList)
}

abstract class AbstractUser {
    + id: UUID
    + username: String
    + password: String
    + role: String
    + status: Status
    + last_active: Date
}

class User extends AbstractUser {}

class UserRole {
    + id: UUID
    + role_name: String
    + status: Status
}

enum Status {
    Active
    Inactive
    Disabled
    Archived
}

class Student {
    + id: UUID
    + name: String
    + email: String
}

class StudentList {
    + id: UUID
    + name: String
    + status: Status
}

class StudentListMembership {
    + student_id: UUID
    + student_list_id: UUID
}

class Subject {
    + id: UUID
    + subject_name: String
    + subject_code: String
    + is_active: Int
}

class UserSubject {
    + user_id: UUID
    + subject_id: UUID
    + status: Status
}

class ExamDetail {
    + id: UUID
    + year: Integer
    + study_period: String
    + exam_name: String
    + supplementary: Boolean
}

class QuestionFile {
    + id: UUID
    + file_path: String
    + uploaded_by: UUID
    + status: Status
}

class TrussDiagram {
    + id: UUID
    + diagram_path: String
    + status: Status
}

class TrussParameter {
    + id: UUID
    + name: String
    + range_from: Integer
    + range_to: Integer
}

class TrussParameterLimit {
    + truss_diagram_id: UUID
    + min_parameters: Integer = 2
    + max_parameters: Integer = 3
}

class ExamPaper {
    + id: UUID
    + exam_detail_id: UUID
    + subject_id: UUID
    + truss_diagram_id: UUID
    + generated_at: DateTime
    + output_format: ExamOutputFormat
}

enum ExamOutputFormat {
    PDF
    DOCX
    TXT
}

class ActivityLog {
    + id: UUID
    + action: String
    + timestamp: DateTime
}

' Relationships
IExamPaper --> StudentList : "assignToStudents()"
ExamService "1" --> "*" ExamPaper : generates
ExamService --> StudentList : assigns exams to
User --> ExamService : uses
User "1" o-- "*" ActivityLog
User "1" o-- "*" UserSubject
UserRole o-- User
UserSubject "*" -- "*" Subject
Student "1" o-- "*" StudentListMembership
StudentList "1" *-- "1..50" StudentListMembership
StudentListMembership "1" --> "1" Student
StudentList "1" --o "1" ExamPaper : "assigned to"
ExamDetail "1" --o "*" ExamPaper
TrussDiagram "1" --* "1" ExamPaper
TrussDiagram "1" *-- "1" TrussParameterLimit
TrussParameterLimit "1" o-- "2..3" TrussParameter
ExamPaper --> ExamOutputFormat : output_format
ExamPaper "1" o-- "*" QuestionFile
UserSubject "*" --o "*" ExamPaper : "Uses same subject"
@enduml